{"remainingRequest":"/home/aarbex/Projects/dotnet/vue_project/project_school/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aarbex/Projects/dotnet/vue_project/project_school/src/components/Aluno/Alunos.vue?vue&type=style&index=0&id=b1161e48&scoped=true&lang=css&","dependencies":[{"path":"/home/aarbex/Projects/dotnet/vue_project/project_school/src/components/Aluno/Alunos.vue","mtime":1615496300382},{"path":"/home/aarbex/Projects/dotnet/vue_project/project_school/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aarbex/Projects/dotnet/vue_project/project_school/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/aarbex/Projects/dotnet/vue_project/project_school/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/aarbex/Projects/dotnet/vue_project/project_school/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aarbex/Projects/dotnet/vue_project/project_school/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmlucHV0ewogIHdpZHRoOiBjYWxjKDEwMCUgLSAxOTBweCk7CiAgYm9yZGVyOiAwOwogIHBhZGRpbmc6IDIwcHg7CiAgZm9udC1zaXplOiAxLjNlbTsKICBjb2xvcjogIzY4N2Y3ZjsKICBkaXNwbGF5OiBpbmxpbmU7Cn0KLmJ0bl9pbnB1dHsKICB3aWR0aDogMTUwcHg7CiAgYm9yZGVyOiAwcHg7CiAgcGFkZGluZzogMjBweDsKICBmb250LXNpemU6IDEuM2VtOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTYsIDExNSwgMTE1KTsKICBkaXNwbGF5OiBpbmxpbmU7Cn0KCi5idG5faW5wdXQ6aG92ZXJ7CiAgcGFkZGluZzogMjBweDsKICBtYXJnaW46IDBweDsKICBib3JkZXI6IDBweDsKfQo="},{"version":3,"sources":["Alunos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Alunos.vue","sourceRoot":"src/components/Aluno","sourcesContent":["<template>\n  <div>\n    \n    <titulo texto=\"Alunos\"/>\n    \n    <div>\n      <input \n        type=\"text\" \n        placeholder=\"Nome do Aluno\"\n        v-model=\"nome\"\n        @keyup.enter=\"addAluno()\">\n        <button class=\"btn btn_input\" @click=\"addAluno()\">Adicionar</button>\n    </div>\n\n    <table>\n      <thead>\n        <th>Matr.</th>\n        <th>Nome</th>\n        <th>Opções</th>\n      </thead>\n      <tbody v-if=\"alunos.length\">\n        <tr v-for=\"aluno in alunos\" :key=\"aluno.id\">\n          <td>{{aluno.id}}</td>\n          <td>{{aluno.nome}} {{aluno.sobrenome}}</td>\n          <td>\n            <button class=\"btn btn_danger\" @click=\"removerAluno(aluno)\">Remover</button>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot v-else>Nenhum aluno encontrado!</tfoot>\n    </table>\n\n  </div>\n</template>\n\n<script>\nimport Titulo from '../Titulo/Titulo'\nexport default {\n  components: {\n    Titulo\n  },\n  data(){\n    return {\n      titulo: 'Aluno',\n      nome: '',\n      alunos: []\n    }\n  },\n  created(){\n    this.$http.get('http://localhost:3000/alunos')\n    .then(res => res.json())\n    .then(alunos => this.alunos = alunos)\n  },\n  props: {\n  },\n  methods: {\n    addAluno() {\n      let _aluno = {\n        nome: this.nome,\n        sobrenome: ''\n      };\n\n    this.$http\n      .post('http://localhost:3000/alunos', _aluno)\n      .then(res => res.json())\n      this.nome = '';\n      location.reload()\n    },\n    removerAluno(aluno){\n      this.$http\n            .delete(`http://localhost:3000/alunos/${aluno.id}`)\n            .then(() => {\n              let indice = this.alunos.indexOf(aluno);\n              this.alunos.splice(indice, 1);\n            })\n\n      \n      //this.alunos.splice(indice, 1);\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  input{\n    width: calc(100% - 190px);\n    border: 0;\n    padding: 20px;\n    font-size: 1.3em;\n    color: #687f7f;\n    display: inline;\n  }\n  .btn_input{\n    width: 150px;\n    border: 0px;\n    padding: 20px;\n    font-size: 1.3em;\n    background-color: rgb(116, 115, 115);\n    display: inline;\n  }\n\n  .btn_input:hover{\n    padding: 20px;\n    margin: 0px;\n    border: 0px;\n  }\n</style>\n"]}]}